GlobalPlanner:
  # 基础路径规划算法配置
  allow_unknown: true                    # 是否允许规划器规划穿过未知区域的路径
  use_dijkstra: true                     # 是否使用Dijkstra算法(保证最优路径)。若为false，则使用A*算法(更快，但不一定最优)，默认为true  
  use_quadratic: true                    # 是否使用二次函数近似计算势场(更平滑，但计算量稍大)。若为false，则使用线性近似，默认为true
  use_grid_path: false                   # 是否生成严格沿栅格边界的路径。若为false，则使用梯度下降法生成平滑路径，默认为false
  old_navfn_behavior: false              # 是否完全模拟旧版navfn的行为(包括其他布尔参数的默认值)，默认为false 
  
  # 规划范围与容错
  allow_unknown: true                    # 是否允许规划器穿过未知区域(需配合costmap的track_unknown_space: true使用)，默认为true  
  planner_window_x: 0.0                  # 规划时考虑地图的X方向窗口大小(0表示全地图)，默认为0.0  
  planner_window_y: 0.0                  # 规划时考虑地图的Y方向窗口大小(0表示全地图)，默认为0.0  
  default_tolerance: 0.3                 # 若目标点位于障碍物内，规划到其周围该半径内的最近可行点(单位：米)，默认为0.0(必须完全到达目标)

  # 代价与势场参数
  lethal_cost: 253                        # 致命障碍物代价阈值(超过此值的栅格视为不可通行)，默认为253 
  neutral_cost: 50                        # 自由空间代价值, (自由空间的基准代价值)，默认为50
  cost_factor: 3.0                        # 代价因子, 代价地图中每个代价值的放大系数(影响路径避障倾向)，默认为3.0
  publish_potential: true                 # 是否发布势场数据(用于可视化，非navfn的点云势场)，默认为true
  publish_scale: 100                      # 发布势场数据时的缩放系数，默认为100  

  orientation_mode: 2                     # 路径点的朝向模式：0=无，1=前向，2=插值，3=朝向目标
  orientation_window_size: 1              # 用于确定路径点朝向的窗口大小(单位：路径点数量)

# orientation_mode(方向模式): 
#   默认值: 2
#   功能: 控制机器人路径跟踪时的方向调整策略，决定如何根据路径点计算目标朝向。
#   可选值及含义:
#      0(None): 不调整方向，机器人保持当前朝向(仅位置跟踪)。
#      1(Forward): 始终朝向路径的前进方向(下一个路径点)。
#      2(Interpolate): 默认值，在路径点之间插值计算平滑朝向(平衡当前点和下一个点的方向)。
#      3(Backward): 特殊场景使用，朝向路径的反方向(如倒车行为)。
# orientation_window_size(方向窗口大小):
#   默认值: 1
#   功能: 定义方向插值计算时的参考窗口范围(单位：路径点数量)。
#     =1: 仅使用当前路径点和下一个路径点计算方向(快速响应，但可能不够平滑)。
#     >1: (如2或3): 基于多个未来路径点计算平均方向(更平滑，但可能引入延迟)。
#   典型应用:
#     在狭窄走廊或复杂转弯时，增大窗口值可减少机器人朝向的抖动。